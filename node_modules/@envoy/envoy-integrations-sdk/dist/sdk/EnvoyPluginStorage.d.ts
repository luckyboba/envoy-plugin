import EnvoyPluginStoragePipeline from '../base/EnvoyPluginStoragePipeline';
import { EnvoyStorageSetUniqueNumOptions, EnvoyStorageSetUniqueOptions } from '../internal/EnvoyStorageCommand';
import EnvoyStorageItem from './EnvoyStorageItem';
import EnvoyPluginAPI from './EnvoyPluginAPI';
/**
 * A key-value storage that can be scoped to a specific install,
 * or to the plugin itself.
 *
 * @category Storage
 * @category Request Object
 */
export default class EnvoyPluginStorage {
    protected readonly api: EnvoyPluginAPI;
    readonly installId: string | undefined;
    constructor(pluginAPI: EnvoyPluginAPI, installId?: string);
    /**
     * Creates a new pipeline instance.
     */
    pipeline(): EnvoyPluginStoragePipeline;
    /**
     * Gets a single {@link EnvoyStorageItem} from storage.
     *
     * Wrapper for single pipeline get.
     */
    get<Value = unknown>(key: string): Promise<EnvoyStorageItem<Value> | {
        key: string;
        value: undefined;
    }>;
    /**
     * Sets a single {@link EnvoyStorageItem} from storage.
     *
     * Wrapper for single pipeline set.
     */
    set<Value = unknown>(key: string, value: Value): Promise<EnvoyStorageItem<Value>>;
    /**
     * Sets a single unique string {@link EnvoyStorageItem} from storage.
     *
     * Wrapper for single pipeline setUnique.
     */
    setUnique(key: string, options?: EnvoyStorageSetUniqueOptions): Promise<EnvoyStorageItem<string> | {
        key: string;
        value: undefined;
    }>;
    /**
     * Sets a single unique number {@link EnvoyStorageItem} from storage.
     *
     * Wrapper for single pipeline setUnique.
     */
    setUniqueNum(key: string, options?: EnvoyStorageSetUniqueNumOptions): Promise<EnvoyStorageItem<number> | {
        key: string;
        value: undefined;
    }>;
    /**
     * Unsets an {@link EnvoyStorageItem} from storage. Returns null if the item did not previously exist.
     *
     * Wrapper for single pipeline unset.
     */
    unset<Value = unknown>(key: string): Promise<EnvoyStorageItem<Value> | {
        key: string;
        value: undefined;
    }>;
    /**
     * Returns an array of {@link EnvoyStorageItem} from storage.
     *
     * Wrapper for single pipeline list.
     */
    list<Value = unknown>(page?: number): Promise<EnvoyStorageItem<Value>[]>;
}
//# sourceMappingURL=EnvoyPluginStorage.d.ts.map