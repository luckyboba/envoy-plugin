"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var axios_1 = __importDefault(require("axios"));
var EnvoyAPI_1 = __importDefault(require("../base/EnvoyAPI"));
var constants_1 = require("../constants");
var axiosConstructor_1 = require("../util/axiosConstructor");
/**
 * API endpoints for *user-scoped* tokens.
 * To access Envoy resources, this is the API you'd want.
 *
 * @category API
 * @category Request Object
 */
var EnvoyUserAPI = /** @class */ (function (_super) {
    __extends(EnvoyUserAPI, _super);
    function EnvoyUserAPI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * {@link AgreementPageModel}
     */
    EnvoyUserAPI.prototype.getAgreementPage = function (id, include) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.dataLoader.load({ type: 'agreement-pages', id: id, include: include })];
            });
        });
    };
    /**
     * Requires `agreements.read` scope.
     */
    EnvoyUserAPI.prototype.getAgreement = function (id, include) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.dataLoader.load({ type: 'agreements', id: id, include: include })];
            });
        });
    };
    /**
     * Requires `companies.read` scope.
     */
    EnvoyUserAPI.prototype.getCompany = function (id, include) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.dataLoader.load({ type: 'companies', id: id, include: include })];
            });
        });
    };
    /**
     * Requires `employees.read` scope.
     */
    EnvoyUserAPI.prototype.getEmployee = function (id, include) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.dataLoader.load({ type: 'employees', id: id, include: include })];
            });
        });
    };
    /**
     * Requires `flows.read` scope.
     */
    EnvoyUserAPI.prototype.getFlow = function (id, include) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.dataLoader.load({ type: 'flows', id: id, include: include })];
            });
        });
    };
    /**
     * Requires `locations.read` scope.
     */
    EnvoyUserAPI.prototype.getLocation = function (id, include) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.dataLoader.load({ type: 'locations', id: id, include: include })];
            });
        });
    };
    /**
     * Requires `sign-in-field-pages.read` scope.
     */
    EnvoyUserAPI.prototype.getSignInFieldPage = function (id, include) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.dataLoader.load({ type: 'sign-in-field-pages', id: id, include: include })];
            });
        });
    };
    /**
     * Requires `sign-in-fields.read` scope.
     */
    EnvoyUserAPI.prototype.getSignInField = function (id, include) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.dataLoader.load({ type: 'sign-in-fields', id: id, include: include })];
            });
        });
    };
    /**
     * Requires `employees.read` scope.
     */
    EnvoyUserAPI.prototype.getEmployeeByEmail = function (email, include) {
        return __awaiter(this, void 0, void 0, function () {
            var paginationParams, employee;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        paginationParams = {
                            filter: {
                                email: email,
                            },
                            page: {
                                limit: 1,
                            },
                        };
                        return [4 /*yield*/, this.axios.get('/api/v3/employees', {
                                params: __assign({ include: include }, paginationParams),
                            })];
                    case 1:
                        employee = (_a.sent()).data.data[0];
                        return [2 /*return*/, employee];
                }
            });
        });
    };
    /**
     * Requires `employees.read` scope.
     */
    EnvoyUserAPI.prototype.getEmployees = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios.get('/api/v3/employees', { params: params })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    /**
     * Requires `flows.read` scope.
     */
    EnvoyUserAPI.prototype.getFlows = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios.get('/api/v3/flows', { params: params })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    /**
     * Requires `locations.read` scope.
     */
    EnvoyUserAPI.prototype.getLocations = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios.get('/api/v3/locations', { params: params })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    /**
     * Requires `sign-in-fields.read` scope.
     */
    EnvoyUserAPI.prototype.getSignInFields = function (signInFieldPageId) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios.get("/api/v3/sign-in-field-pages/" + signInFieldPageId + "/sign-in-fields")];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    /**
     * Requires `invites.read` scope.
     */
    EnvoyUserAPI.prototype.getInvites = function (params) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios.get('/api/v3/invites', { params: params })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    EnvoyUserAPI.prototype.me = function () {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios.get('/api/v2/users/me')];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    /**
     * Requires `invites.write` scope.
     * May also require `invites.attest` scope if setting `attested: true`.
     */
    EnvoyUserAPI.prototype.createInvite = function (invite) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios({
                            method: 'POST',
                            url: '/api/v3/invites',
                            data: { data: invite },
                        })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    EnvoyUserAPI.prototype.createReservation = function (reservationDetails) {
        return __awaiter(this, void 0, void 0, function () {
            var createReservationBody, data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        createReservationBody = {
                            data: {
                                relationships: __assign({ user: {
                                        data: {
                                            type: 'users',
                                            id: reservationDetails.userId
                                        }
                                    } }, (reservationDetails.locationId && {
                                    location: {
                                        data: {
                                            type: 'locations',
                                            id: reservationDetails.locationId
                                        }
                                    }
                                })),
                                attributes: __assign(__assign({ 'start-time': reservationDetails.startTime }, (reservationDetails.endTime && {
                                    'end-time': reservationDetails.endTime
                                })), { 'booking-source': 'EXTERNAL_API', 'booking-type': 'visitor' })
                            }
                        };
                        return [4 /*yield*/, this.axios({
                                method: 'POST',
                                url: '/a/rms/reservations',
                                data: createReservationBody,
                            })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    /**
     * Requires `invites.write` scope.
     */
    EnvoyUserAPI.prototype.updateInvite = function (inviteId, invite) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios({
                            method: 'PUT',
                            url: "/api/v3/invites/" + inviteId,
                            data: { data: __assign(__assign({}, invite), { id: inviteId }) },
                        })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    /**
     * Requires `invites.write` scope.
     */
    EnvoyUserAPI.prototype.partialUpdateInvite = function (inviteId, invite) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios({
                            method: 'PATCH',
                            url: "/api/v3/invites/" + inviteId,
                            data: { data: __assign(__assign({}, invite), { id: inviteId }) },
                        })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data];
                }
            });
        });
    };
    /**
     * Requires `invites.write` scope.
     */
    EnvoyUserAPI.prototype.removeInvite = function (inviteId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.axios({
                            method: 'DELETE',
                            url: "/api/v3/invites/" + inviteId,
                        })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Builds the authorize URL to redirect a user to initiate the auth code oauth2 flow.
     *
     * Upon completion, they will be redirected to `redirectURL`, with a `code` query param in the url.
     *
     * Use the {@link loginAsUserWithCode} method to exchange that code for an access token.
     */
    EnvoyUserAPI.getAuthorizeURL = function (redirectURL, scope, clientId) {
        if (clientId === void 0) { clientId = constants_1.envoyClientId; }
        var url = new URL(constants_1.envoyBaseURL);
        url.pathname = '/a/auth/v0/authorize';
        url.searchParams.append('response_type', 'code');
        url.searchParams.append('client_id', clientId);
        url.searchParams.append('redirect_uri', redirectURL);
        return url.href + "&scope=" + scope.join('+');
    };
    /**
     * Gets a user access token using `password` as the grant type (discouraged - use {@link loginAsUserWithCode} below).
     */
    EnvoyUserAPI.loginAsUserWithPassword = function (username, password, scope, clientId, clientSecret) {
        if (clientId === void 0) { clientId = constants_1.envoyClientId; }
        if (clientSecret === void 0) { clientSecret = constants_1.envoyClientSecret; }
        return __awaiter(this, void 0, void 0, function () {
            var data, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, axios_1.default({
                                auth: {
                                    username: clientId,
                                    password: clientSecret,
                                },
                                method: 'POST',
                                data: {
                                    grant_type: 'password',
                                    scope: scope,
                                    username: username,
                                    password: password,
                                },
                                url: '/a/auth/v0/token',
                                baseURL: constants_1.envoyBaseURL,
                            })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data];
                    case 2:
                        error_1 = _a.sent();
                        throw axiosConstructor_1.sanitizeAxiosError(error_1);
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Gets a user access token using `code` as the grant type.
     */
    EnvoyUserAPI.loginAsUserWithCode = function (code, scope, clientId, clientSecret) {
        if (clientId === void 0) { clientId = constants_1.envoyClientId; }
        if (clientSecret === void 0) { clientSecret = constants_1.envoyClientSecret; }
        return __awaiter(this, void 0, void 0, function () {
            var data, error_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, axios_1.default({
                                auth: {
                                    username: clientId,
                                    password: clientSecret,
                                },
                                method: 'POST',
                                data: {
                                    grant_type: 'authorization_code',
                                    scope: scope,
                                    code: code,
                                },
                                url: '/a/auth/v0/token',
                                baseURL: constants_1.envoyBaseURL,
                            })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data];
                    case 2:
                        error_2 = _a.sent();
                        throw axiosConstructor_1.sanitizeAxiosError(error_2);
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Gets a user access token using `plugin_install` as the grant type.
     */
    EnvoyUserAPI.loginAsPluginInstaller = function (installId, clientId, clientSecret) {
        if (clientId === void 0) { clientId = constants_1.envoyClientId; }
        if (clientSecret === void 0) { clientSecret = constants_1.envoyClientSecret; }
        return __awaiter(this, void 0, void 0, function () {
            var data, error_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, axios_1.default({
                                auth: {
                                    username: clientId,
                                    password: clientSecret,
                                },
                                method: 'POST',
                                data: {
                                    grant_type: 'plugin_install',
                                    install_id: installId,
                                },
                                url: '/a/auth/v0/token',
                                baseURL: constants_1.envoyBaseURL,
                            })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data];
                    case 2:
                        error_3 = _a.sent();
                        throw axiosConstructor_1.sanitizeAxiosError(error_3);
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return EnvoyUserAPI;
}(EnvoyAPI_1.default));
exports.default = EnvoyUserAPI;
