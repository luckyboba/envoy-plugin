import { RequestHandler } from 'express';
/**
 * Will only proceed if the install's `config` has a truthy value for the given `key`.
 *
 * @internal
 */
export declare function booleanFilterMiddleware<Config>(key: keyof Config, message: string): RequestHandler;
/**
 * Will only proceed if the install's `config` has a truthy value for the given `employeeSignInEnabledKey`.
 *
 * @category Filter
 * @category Middleware
 */
export declare function employeeSignInEnabledFilterMiddleware<Config>(employeeSignInEnabledKey: keyof Config, message?: string): RequestHandler;
/**
 * Will not proceed if the employee who's signing in is present in the excluded employees list.
 *
 * @category Filter
 * @category Middleware
 */
export declare function excludedEmployeesFilterMiddleware<Config>(excludeEmployeesKey: keyof Config, message?: string): RequestHandler;
/**
 * Will only proceed if the entry has an invite
 * and the install's `config` has a truthy value for the given `invitesOnlyKey`.
 *
 * @category Filter
 * @category Middleware
 */
export declare function inviteOnlyEntryFilterMiddleware<Config>(invitesOnlyKey: keyof Config, message?: string): RequestHandler;
//# sourceMappingURL=filters.d.ts.map