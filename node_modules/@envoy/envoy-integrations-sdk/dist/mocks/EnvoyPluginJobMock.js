"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_ismatch_1 = __importDefault(require("lodash.ismatch"));
var EnvoyPluginJob_1 = __importDefault(require("../sdk/EnvoyPluginJob"));
var EnvoyPluginJobMock = /** @class */ (function (_super) {
    __extends(EnvoyPluginJobMock, _super);
    function EnvoyPluginJobMock(pluginAPI, jobId) {
        var _this = _super.call(this, pluginAPI, jobId) || this;
        _this.api.updateJob = function (id, updates) {
            EnvoyPluginJobMock.updates.push(updates);
            return Promise.resolve();
        };
        return _this;
    }
    EnvoyPluginJobMock.attachmentLike = function (partialAttachment) {
        return EnvoyPluginJobMock.updates.find(function (_a) {
            var attachments = _a.attachments;
            return attachments.find(function (attachment) { return lodash_ismatch_1.default(attachment, partialAttachment); });
        });
    };
    Object.defineProperty(EnvoyPluginJobMock, "lastStatus", {
        get: function () {
            return __spreadArray([], EnvoyPluginJobMock.updates).reverse().find(function (_a) {
                var status = _a.status;
                return !!status;
            });
        },
        enumerable: false,
        configurable: true
    });
    EnvoyPluginJobMock.reset = function () {
        EnvoyPluginJobMock.updates = [];
    };
    EnvoyPluginJobMock.updates = [];
    return EnvoyPluginJobMock;
}(EnvoyPluginJob_1.default));
exports.default = EnvoyPluginJobMock;
