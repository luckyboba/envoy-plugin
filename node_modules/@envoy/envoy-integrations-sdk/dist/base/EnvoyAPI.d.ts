import DataLoader from 'dataloader';
import JSONAPIData from '../util/json-api/JSONAPIData';
interface EnvoyWebDataLoaderKey extends JSONAPIData {
    include?: string;
}
/**
 * Make typed API calls to Envoy.
 * Uses a data loader to leverage JSONAPI's "include" functionality.
 * This allows us to save everything that was included in the initial response
 * to be used later without re-fetching from the API.
 *
 * @category Base
 */
export default class EnvoyAPI {
    /**
     * HTTP Client with Envoy's defaults.
     */
    readonly axios: import("axios").AxiosInstance;
    /**
     * A dataloader: https://github.com/graphql/dataloader
     * Will fetch individual resources from the API,
     * unless they exist in cache (which they usually will).
     */
    protected readonly dataLoader: DataLoader<EnvoyWebDataLoaderKey, any, string>;
    constructor(accessToken: string);
}
export {};
//# sourceMappingURL=EnvoyAPI.d.ts.map